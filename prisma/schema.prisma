// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DB_DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Schedule {
  id                Int               @id @default(autoincrement())
  title             String
  userUUID          String
  goals             Goal[]
  timeboxes         TimeBox[]
  recordedTimeboxes RecordedTimeBox[]
}

model Goal {
  id         Int       @id @default(autoincrement())
  title      String
  completed  Boolean
  completedOn DateTime
  active     Boolean
  partOfLine Int
  targetDate DateTime
  timeboxes  TimeBox[]
  schedule   Schedule? @relation(fields: [scheduleID], references: [id])
  scheduleID Int?
  objectUUID String @unique
  metric     Int?
  loggingsOfMetric loggingOfMetric[]
  state      String? @default("active")
}

model TimeBox {
  id                Int               @id @default(autoincrement())
  numberOfBoxes     Int
  title             String
  description       String
  color             String
  startTime         DateTime          @db.Timestamptz
  endTime           DateTime          @db.Timestamptz
  reoccuring        Reoccuring?       @relation(fields: [reoccuringID], references: [id])
  reoccuringID      Int?
  goal              Goal?             @relation(fields: [goalID], references: [id])
  goalID            Int?
  schedule          Schedule?         @relation(fields: [scheduleID], references: [id])
  scheduleID        Int?
  recordedTimeBoxes RecordedTimeBox[]
  isTimeblock       Boolean?
  objectUUID String @unique
}

model Reoccuring {
  id               Int       @id @default(autoincrement())
  startOfDayRange  Int?
  endOfDayRange     Int?
  TimeBox          TimeBox[]
}

model RecordedTimeBox {
  id                Int       @id @default(autoincrement())
  recordedStartTime DateTime  @db.Timestamptz
  recordedEndTime   DateTime  @db.Timestamptz
  timeBox           TimeBox?  @relation(fields: [timeBoxID], references: [id])
  timeBoxID         Int?
  schedule          Schedule? @relation(fields: [scheduleID], references: [id])
  scheduleID        Int?
  objectUUID String @unique
}

model Profile {
  userUUID          String  @id
  boxSizeUnit       String
  boxSizeNumber     Int
  wakeupTime        String
  scheduleID        Int
  scheduleIndex     Int
  goalLimit         Int
}

model loggingOfMetric {
  id                Int       @id @default(autoincrement())
  date              DateTime @db.Timestamptz
  metric Int
  goal              Goal             @relation(fields: [goalID], references: [id])
  goalID            Int
}

model GoalStatistics {
  id              Int      @id @default(autoincrement())
  goalsActive      Int
  goalsCompleted   Int
}